openapi: 3.0.2
servers:
  - url: /v3
info:
  description: |-
    Test
  version: 1.0.17
  title: Swagger Petstore - OpenAPI 3.0
paths:
  /pet:
    post:
      tags:
        - pet
      summary: Add a new pet to the store
      description: Add a new pet to the store
      operationId: addPet
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
      requestBody:
        description: Create a new pet in the store
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
    put:
      tags:
        - pet
      summary: Update an existing pet
      description: Update an existing pet by Id
      operationId: updatePet
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
      requestBody:
        description: Update an existent pet in the store
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
  '/pet/{petId}':
    get:
      tags:
        - pet
      summary: Find pet by ID
      description: Returns a single pet
      operationId: getPetById
      parameters:
        - name: petId
          in: path
          description: ID of pet to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
    delete:
      tags:
        - pet
      summary: Deletes a pet
      description: ''
      operationId: deletePet
      parameters:
        - name: api_key
          in: header
          description: ''
          required: false
          schema:
            type: string
        - name: petId
          in: path
          description: Pet id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: No Content
components:
  schemas:
    Pet:
      required:
        - name
        - photoUrls
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/PetPartID'
        name:
          allOf:
            - $ref: '#/components/schemas/PetPartName'
        category:
          allOf:
            - $ref: '#/components/schemas/CategoryPartID'
            - $ref: '#/components/schemas/CategoryPartName'
        photoUrls:
          allOf:
            - $ref: '#/components/schemas/PetPartPhotoUrls'
        tags:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/PetPartTagsItems'
        status:
          allOf:
            - $ref: '#/components/schemas/PetPartStatus'
      type: object
    PetPartID:
      type: integer
      format: int64
      example: 10
    PetPartName:
      type: string
      example: doggie
    PetPartPhotoUrls:
      type: array
      items:
        type: string
    PetPartTagsItems:
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      type: object
    PetPartStatus:
      type: string
      description: pet status in the store
      enum:
        - available
        - pending
        - sold
    CategoryPartID:
      description: "category description"
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
    CategoryPartName:
      type: object
      properties:
        name:
          type: string
          example: Dogs



  requestBodies:
    Pet:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Pet'
        application/xml:
          schema:
            $ref: '#/components/schemas/Pet'
      description: Pet object that needs to be added to the store
